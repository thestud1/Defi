/**
 * Minified by jsDelivr using Terser v5.17.1.
 * Original file: /npm/impor@0.1.1/out/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";var __awaiter=this&&this.__awaiter||function(e,t,o,r){return new(o||(o=Promise))((function(i,p){function m(e){try{n(r.next(e))}catch(e){p(e)}}function u(e){try{n(r.throw(e))}catch(e){p(e)}}function n(e){e.done?i(e.value):new o((function(t){t(e.value)})).then(m,u)}n((r=r.apply(e,t||[])).next())}))};const path_1=require("path");function impor(e,t){let o;return/^\./.test(e)&&(e=path_1.join(t,e)),-1===ImportJob.importQueue.indexOf(e)&&ImportJob.importQueue.push(e),new Proxy((()=>{}),{apply:(t,r,i)=>(o||(ImportJob.removeJob(e),o=require(e)),Reflect.apply(o,r,i)),construct:(t,r)=>(o||(ImportJob.removeJob(e),o=require(e)),Reflect.construct(o,r)),defineProperty:(t,r,i)=>(o||(ImportJob.removeJob(e),o=require(e)),Reflect.defineProperty(o,r,i)),deleteProperty:(t,r)=>(o||(ImportJob.removeJob(e),o=require(e)),Reflect.deleteProperty(o,r)),get:(t,r,i)=>(o||(ImportJob.removeJob(e),o=require(e)),Reflect.get(o,r,i)),getPrototypeOf:t=>(o||(ImportJob.removeJob(e),o=require(e)),Reflect.getPrototypeOf(o)),has:(t,r)=>(o||(ImportJob.removeJob(e),o=require(e)),Reflect.has(o,r)),isExtensible:t=>(o||(ImportJob.removeJob(e),o=require(e)),Reflect.isExtensible(o)),ownKeys:t=>(o||(ImportJob.removeJob(e),o=require(e)),o?Reflect.ownKeys(o):[]),preventExtensions:t=>(o||(ImportJob.removeJob(e),o=require(e)),Reflect.preventExtensions(o)),set:(t,r,i,p)=>(o||(ImportJob.removeJob(e),o=require(e)),Reflect.set(o,r,i,p)),setPrototypeOf:(t,r)=>(o||(ImportJob.removeJob(e),o=require(e)),Reflect.setPrototypeOf(o,r))})}class ImportJob{static importJob(){return __awaiter(this,void 0,void 0,(function*(){if(ImportJob.importJobBusy)return;if(0===ImportJob.importQueue.length)return;const e=ImportJob.importQueue.shift();e&&(ImportJob.importJobBusy=!0,yield Promise.resolve().then((()=>require(e))),ImportJob.importJobBusy=!1)}))}static removeJob(e){const t=ImportJob.importQueue.indexOf(e);-1!==t&&ImportJob.importQueue.splice(t,1)}static start(){ImportJob.isStarted||(ImportJob.isStarted=!0,setInterval(ImportJob.importJob,1e3))}}ImportJob.isStarted=!1,ImportJob.importQueue=[],ImportJob.importJobBusy=!1,ImportJob.start(),module.exports=e=>t=>impor(t,e);
//# sourceMappingURL=/sm/bc687c161efe614b836aa04183081935a66efacebb1ff2d8c1377c7c35135f40.map